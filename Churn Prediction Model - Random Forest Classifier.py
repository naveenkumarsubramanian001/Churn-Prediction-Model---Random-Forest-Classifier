# -*- coding: utf-8 -*-
"""CodeSoft Task 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zun52sy9-MFaofpzE8H9PTAnS0T071wv
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler , LabelEncoder
from sklearn.metrics import accuracy_score

churn_data = pd.read_csv('/content/Churn_Modelling.csv')

churn_data.head()

churn_data.shape

churn_data = churn_data.drop(['RowNumber','CustomerId','Surname'],axis=1)

churn_data.head()

encoder = LabelEncoder()

churn_data['Geography'] = encoder.fit_transform(churn_data['Geography'])
churn_data['Gender'] = encoder.fit_transform(churn_data['Gender'])
print(churn_data.head())

X = churn_data.drop(['Exited'],axis=1)
Y = churn_data['Exited']

StandardScaler = StandardScaler()

StandardScaler.fit(X)

X = StandardScaler.transform(X)

model = RandomForestClassifier()

X_train , X_test , Y_train , Y_test = train_test_split(X,Y,test_size=0.2,stratify= Y ,random_state=2)

churn_data['Exited'].value_counts()

model.fit(X_train,Y_train)

train_pred = model.predict(X_train)
test_pred = model.predict(X_test)

score = accuracy_score(Y_train,train_pred)
print(score)
score1 = accuracy_score(Y_test,test_pred)
print(score1)

